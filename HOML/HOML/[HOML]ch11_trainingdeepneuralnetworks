{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","authorship_tag":"ABX9TyMQTbDc+rlAij+fuqbj7f0X"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["#11.1 그래디언트 소실과 폭주 문제"],"metadata":{"id":"2l3xc7-amQOk"}},{"cell_type":"markdown","source":["##11.1.1 글로럿과 He 초기화"],"metadata":{"id":"OhxiVx1qmVoa"}},{"cell_type":"code","source":["import tensorflow as tf\n","\n","dense = tf.keras.layers.Dense(50, activation='relu', kernel_initializer='he_normal')"],"metadata":{"id":"wyoAVmJsmaRX"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["11.1.2 고급 활성화 함수"],"metadata":{"id":"yzjUEFXTn0Tn"}},{"cell_type":"code","source":["leaky_relu = tf.keras.layers.LeakyReLU(alpha=0.2)\n","dense = tf.keras.layers.Dense(50, activation=leaky_relu, kernel_initializer='he_normal')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZpFbkrQxn2uZ","executionInfo":{"status":"ok","timestamp":1741669907393,"user_tz":-540,"elapsed":27,"user":{"displayName":"이창수","userId":"02759287954653446121"}},"outputId":"c53cb9aa-c5f0-4afa-b684-0166a43ed3f1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/keras/src/layers/activations/leaky_relu.py:41: UserWarning: Argument `alpha` is deprecated. Use `negative_slope` instead.\n","  warnings.warn(\n"]}]},{"cell_type":"markdown","source":["##11.1.3 배치 정규화"],"metadata":{"id":"07Ow0kdPmWaj"}},{"cell_type":"code","source":["model = tf.keras.Sequential([tf.keras.layers.Flatten(input_shape=[28,28]),\n","                             tf.keras.layers.BatchNormalization(),\n","                             tf.keras.layers.Dense(300, activation='relu', kernel_initializer='he_normal'),\n","                             tf.keras.layers.BatchNormalization(),\n","                             tf.keras.layers.Dense(100, activation='relu', kernel_initializer='he_normal'),\n","                             tf.keras.layers.BatchNormalization(),\n","                             tf.keras.layers.Dense(10, activation='softmax')])\n","model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":410},"id":"qYf7JZ-vmcQ0","executionInfo":{"status":"ok","timestamp":1741669946940,"user_tz":-540,"elapsed":2980,"user":{"displayName":"이창수","userId":"02759287954653446121"}},"outputId":"9033b4b0-6805-4efc-86ea-bc8061184424"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["\u001b[1mModel: \"sequential\"\u001b[0m\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n","┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                        \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape               \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m        Param #\u001b[0m\u001b[1m \u001b[0m┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n","│ flatten_1 (\u001b[38;5;33mFlatten\u001b[0m)                  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m784\u001b[0m)                 │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ batch_normalization_1                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m784\u001b[0m)                 │           \u001b[38;5;34m3,136\u001b[0m │\n","│ (\u001b[38;5;33mBatchNormalization\u001b[0m)                 │                             │                 │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense_3 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m300\u001b[0m)                 │         \u001b[38;5;34m235,500\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ batch_normalization_2                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m300\u001b[0m)                 │           \u001b[38;5;34m1,200\u001b[0m │\n","│ (\u001b[38;5;33mBatchNormalization\u001b[0m)                 │                             │                 │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense_4 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m)                 │          \u001b[38;5;34m30,100\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ batch_normalization_3                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m)                 │             \u001b[38;5;34m400\u001b[0m │\n","│ (\u001b[38;5;33mBatchNormalization\u001b[0m)                 │                             │                 │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense_5 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m10\u001b[0m)                  │           \u001b[38;5;34m1,010\u001b[0m │\n","└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n","┃<span style=\"font-weight: bold\"> Layer (type)                         </span>┃<span style=\"font-weight: bold\"> Output Shape                </span>┃<span style=\"font-weight: bold\">         Param # </span>┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n","│ flatten_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Flatten</span>)                  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">784</span>)                 │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ batch_normalization_1                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">784</span>)                 │           <span style=\"color: #00af00; text-decoration-color: #00af00\">3,136</span> │\n","│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalization</span>)                 │                             │                 │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense_3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">300</span>)                 │         <span style=\"color: #00af00; text-decoration-color: #00af00\">235,500</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ batch_normalization_2                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">300</span>)                 │           <span style=\"color: #00af00; text-decoration-color: #00af00\">1,200</span> │\n","│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalization</span>)                 │                             │                 │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense_4 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>)                 │          <span style=\"color: #00af00; text-decoration-color: #00af00\">30,100</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ batch_normalization_3                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>)                 │             <span style=\"color: #00af00; text-decoration-color: #00af00\">400</span> │\n","│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalization</span>)                 │                             │                 │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense_5 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">10</span>)                  │           <span style=\"color: #00af00; text-decoration-color: #00af00\">1,010</span> │\n","└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Total params: \u001b[0m\u001b[38;5;34m271,346\u001b[0m (1.04 MB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">271,346</span> (1.04 MB)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m268,978\u001b[0m (1.03 MB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">268,978</span> (1.03 MB)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m2,368\u001b[0m (9.25 KB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">2,368</span> (9.25 KB)\n","</pre>\n"]},"metadata":{}}]},{"cell_type":"markdown","source":["##11.2.1 케라스를 사용한 전이 학습"],"metadata":{"id":"KGe3O1j-qSlM"}},{"cell_type":"code","source":["model_A = tf.keras.models.load_model('my_model_A')\n","model_B_on_A = tf.keras.Sequential(model_A.layers[:-1])\n","model_B_on_A.add(tf.keras.layers.Dense(1,activation='sigmoid'))\n","\n","for layer in model_B_on_A.layers[:-1]:\n","  layer.trainable = False\n","\n","optimizer = tf.keras.optimizers.SGD(learning_rate=0.001)\n","model_B_on_A.compile(loss='binary_crossentropy', optimizer=optimizer, metrics=['accuracy'])\n","\n","history = model_B_on_A.fit(X_train_B, y_train_B, epochs=4, validation_data=(X_valid_B, y_valid_B))\n","\n","for layer in model_B_on_A.layers[:-1]:\n","  layer.trainable = True\n","\n","optimizer = tf.keras.optimizers.SGD(learning_rate=0.001)\n","model_B_on_A.compile(loss='binary_crossentropy', optimizer=optimizer, metrics=['accuracy'])\n","\n","history = model_B_on_A.fit(X_train_B, y_train_B, epochs=16, validation_data=(X_valid_B, y_valid_B))"],"metadata":{"id":"4W5KwjBhqVkh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["python = \"Python is Amazing\"\n","print(python.lower())\n","print(python.upper())\n","print(python[0].isupper())\n","print(len(python))\n","print(python.replace(\"Python\", \"Java\"))\n","\n","index = python.index(\"a\")\n","print(index)\n","\n","def toChar(a):\n","  a = a.lower()\n","  ans = ''\n","  for b in a:\n","    if b in 'abcdefghijklmnopqrstuvwxyz':\n","      ans = ans + b\n","  return ans\n","\n","def ispal(a):\n","  if len(a) <= 1:\n","    return True\n","  else:\n","    return a[0] == a[-1] and ispal(a[1:-1])\n","\n","a = 'Able was I, ere I saw Elba'\n","a = toChar(a)\n","print(ispal(a))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rxMT5Mz7aHEP","executionInfo":{"status":"ok","timestamp":1741700192631,"user_tz":-540,"elapsed":19,"user":{"displayName":"이창수","userId":"02759287954653446121"}},"outputId":"b9bd0100-ac13-41af-9b00-586a0c55ef29"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["python is amazing\n","PYTHON IS AMAZING\n","True\n","17\n","Java is Amazing\n","12\n","True\n"]}]},{"cell_type":"code","source":["def toChar(a):\n","    a = a.lower()\n","    ans = ''\n","    for b in a:\n","        if b in 'abcdefghijklmnopqrstuvwxyz':\n","            ans = ans + b\n","    return ans\n","\n","def ispal(a):\n","    if len(a) <= 1:\n","      return True\n","    else:\n","        return a[0] == a[-1] and ispal(a[1:-1])\n","\n","a = 'abcba'\n","a=toChar(a)\n","print(ispal(a))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YnzpnQmsdQh9","executionInfo":{"status":"ok","timestamp":1741700841473,"user_tz":-540,"elapsed":47,"user":{"displayName":"이창수","userId":"02759287954653446121"}},"outputId":"5a0ee552-ce65-4b3d-fec5-5788737fabfb"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["True\n"]}]}]}